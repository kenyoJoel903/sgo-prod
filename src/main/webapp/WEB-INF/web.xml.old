<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" >

	<servlet>
		<servlet-name>sgo</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>appVersion</servlet-name>
		<servlet-class>sgo.seguridad.AppVersion</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>appVersion</servlet-name>
		<url-pattern>/appVersion</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>sgo</servlet-name>
		<url-pattern>/admin/*</url-pattern>
	</servlet-mapping>
	
	 <servlet>
	<servlet-name>CaptchaServlet</servlet-name>
	<servlet-class>sgo.servlet.CaptchaGenServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>CaptchaServlet</servlet-name>
		<url-pattern>/admin/captcha.jpg</url-pattern>
	</servlet-mapping>	

	
		
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		/WEB-INF/sgo-context.xml
		/WEB-INF/sgo-jdbc.xml
		/WEB-INF/sgo-seguridad.xml
		</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
		
	<listener>
	    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher </listener-class>
 	</listener>	
 	
 	<listener>
	  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
 	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 

	<filter>
		<filter-name>XSS</filter-name>
		<filter-class>sgo.filtros.CrossScriptingFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>XSS</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<welcome-file-list>
    <welcome-file>
      index.jsp
    </welcome-file>
  </welcome-file-list>
</web-app>